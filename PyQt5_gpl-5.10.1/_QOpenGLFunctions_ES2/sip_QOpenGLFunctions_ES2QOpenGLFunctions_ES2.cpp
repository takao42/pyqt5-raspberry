/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.8
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPI_QOpenGLFunctions_ES2.h"

#line 28 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
#include <qopenglfunctions_es2.h>
#line 29 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"



extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_initializeOpenGLFunctions(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_initializeOpenGLFunctions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->initializeOpenGLFunctions();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_initializeOpenGLFunctions, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glActiveTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glActiveTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glActiveTexture(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glActiveTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glAttachShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glAttachShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glAttachShader(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glAttachShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBindAttribLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBindAttribLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLuint a1;
        const  ::GLchar* a2;
        PyObject *a2Keep;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuAA", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2Keep, &a2))
        {
            sipCpp->glBindAttribLocation(a0,a1,a2);
            Py_DECREF(a2Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBindAttribLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBindBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBindBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindBuffer(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBindBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBindFramebuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBindFramebuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindFramebuffer(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBindFramebuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBindRenderbuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBindRenderbuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindRenderbuffer(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBindRenderbuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBindTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBindTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glBindTexture(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBindTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBlendColor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBlendColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLclampf a0;
         ::GLclampf a1;
         ::GLclampf a2;
         ::GLclampf a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glBlendColor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBlendColor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBlendEquation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBlendEquation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glBlendEquation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBlendEquation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBlendEquationSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBlendEquationSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glBlendEquationSeparate(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBlendEquationSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBlendFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBlendFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glBlendFunc(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBlendFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBlendFuncSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBlendFuncSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLenum a2;
         ::GLenum a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glBlendFuncSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBlendFuncSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBufferData(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBufferData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLsizeiptr a1;
        PyObject * a2;
         ::GLenum a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BulP0u", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 48 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array;
        
        if (a2 == Py_None)
            array = 0;
        else
            array = qpyopengl_value_array(&sipError, a2, GL_UNSIGNED_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBufferData(a0, a1, array, a3);
#line 401 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBufferData, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glBufferSubData(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glBufferSubData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLintptr a1;
         ::GLsizeiptr a2;
        PyObject * a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BullP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 61 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array;
        
        if (a3 == Py_None)
            array = 0;
        else
            array = qpyopengl_value_array(&sipError, a3, GL_UNSIGNED_BYTE, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glBufferSubData(a0, a1, a2, array);
#line 449 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glBufferSubData, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCheckFramebufferStatus(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCheckFramebufferStatus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLenum sipRes;

            sipRes = sipCpp->glCheckFramebufferStatus(a0);

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCheckFramebufferStatus, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glClear(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glClear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLbitfield a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glClear(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glClear, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glClearColor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glClearColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLclampf a0;
         ::GLclampf a1;
         ::GLclampf a2;
         ::GLclampf a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bffff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glClearColor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glClearColor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glClearDepthf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glClearDepthf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLclampf a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glClearDepthf(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glClearDepthf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glClearStencil(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glClearStencil(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glClearStencil(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glClearStencil, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glColorMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glColorMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLboolean a0;
         ::GLboolean a1;
         ::GLboolean a2;
         ::GLboolean a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BMMMM", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glColorMask(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glColorMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCompileShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCompileShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glCompileShader(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCompileShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCompressedTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCompressedTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLenum a2;
         ::GLsizei a3;
         ::GLsizei a4;
         ::GLint a5;
         ::GLsizei a6;
        PyObject * a7;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuiiiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipErrorState sipError = sipErrorNone;

#line 81 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a7, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexImage2D(a0, a1, a2, a3, a4, a5, a6, array);
#line 679 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCompressedTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCompressedTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCompressedTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLint a2;
         ::GLint a3;
         ::GLsizei a4;
         ::GLsizei a5;
         ::GLenum a6;
         ::GLsizei a7;
        PyObject * a8;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 90 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, GL_UNSIGNED_BYTE,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glCompressedTexSubImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 728 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCompressedTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCopyTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCopyTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLenum a2;
         ::GLint a3;
         ::GLint a4;
         ::GLsizei a5;
         ::GLsizei a6;
         ::GLint a7;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiuiiiii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipCpp->glCopyTexImage2D(a0,a1,a2,a3,a4,a5,a6,a7);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCopyTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCopyTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCopyTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLint a2;
         ::GLint a3;
         ::GLint a4;
         ::GLint a5;
         ::GLsizei a6;
         ::GLsizei a7;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiiiiiii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7))
        {
            sipCpp->glCopyTexSubImage2D(a0,a1,a2,a3,a4,a5,a6,a7);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCopyTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCreateProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCreateProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp))
        {
             ::GLuint sipRes;

            sipRes = sipCpp->glCreateProgram();

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCreateProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCreateShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCreateShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLuint sipRes;

            sipRes = sipCpp->glCreateShader(a0);

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCreateShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glCullFace(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glCullFace(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glCullFace(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glCullFace, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDeleteBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDeleteBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 104 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteBuffers(a0, reinterpret_cast<const GLuint *>(array));
#line 910 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDeleteBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDeleteFramebuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDeleteFramebuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 113 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteFramebuffers(a0, reinterpret_cast<const GLuint *>(array));
#line 952 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDeleteFramebuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDeleteProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDeleteProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glDeleteProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDeleteProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDeleteRenderbuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDeleteRenderbuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 123 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteRenderbuffers(a0, reinterpret_cast<const GLuint *>(array));
#line 1019 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDeleteRenderbuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDeleteShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDeleteShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glDeleteShader(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDeleteShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDeleteTextures(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDeleteTextures(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 133 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_UNSIGNED_INT,
                sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDeleteTextures(a0, reinterpret_cast<const GLuint *>(array));
#line 1086 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDeleteTextures, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDepthFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDepthFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glDepthFunc(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDepthFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDepthMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDepthMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLboolean a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BM", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glDepthMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDepthMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDepthRangef(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDepthRangef(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLclampf a0;
         ::GLclampf a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glDepthRangef(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDepthRangef, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDetachShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDetachShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glDetachShader(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDetachShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDisable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDisable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glDisable(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDisable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDisableVertexAttribArray(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDisableVertexAttribArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glDisableVertexAttribArray(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDisableVertexAttribArray, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDrawArrays(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDrawArrays(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLsizei a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glDrawArrays(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDrawArrays, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glDrawElements(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glDrawElements(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLsizei a1;
         ::GLenum a2;
        PyObject * a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 149 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, a2, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glDrawElements(a0, a1, a2, array);
#line 1308 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glDrawElements, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glEnable(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glEnable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glEnable(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glEnable, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glEnableVertexAttribArray(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glEnableVertexAttribArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glEnableVertexAttribArray(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glEnableVertexAttribArray, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glFinish(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glFinish(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp))
        {
            sipCpp->glFinish();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glFinish, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glFlush(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glFlush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp))
        {
            sipCpp->glFlush();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glFlush, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glFramebufferRenderbuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glFramebufferRenderbuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLenum a2;
         ::GLuint a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glFramebufferRenderbuffer(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glFramebufferRenderbuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glFramebufferTexture2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glFramebufferTexture2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLenum a2;
         ::GLuint a3;
         ::GLint a4;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuui", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glFramebufferTexture2D(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glFramebufferTexture2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glFrontFace(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glFrontFace(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glFrontFace(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glFrontFace, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGenBuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGenBuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 164 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenBuffers(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 1532 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGenBuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGenerateMipmap(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGenerateMipmap(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glGenerateMipmap(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGenerateMipmap, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGenFramebuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGenFramebuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 176 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenFramebuffers(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 1595 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGenFramebuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGenRenderbuffers(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGenRenderbuffers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 187 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenRenderbuffers(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 1634 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGenRenderbuffers, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGenTextures(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGenTextures(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLsizei a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 198 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLuint *params = new GLuint[a0];
            
        sipCpp->glGenTextures(a0, params);
        
        a1 = qpyopengl_from_GLuint(&sipIsErr, params, a0);
        
        delete[] params;
#line 1672 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGenTextures, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetActiveAttrib(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetActiveAttrib(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 209 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, &bufsize);
        
        GLchar *name = new GLchar[bufsize];
        GLint size;
        GLenum type;
        
        sipCpp->glGetActiveAttrib(a0, a1, bufsize, 0, &size, &type, name);
        
        sipRes = Py_BuildValue("siI", name, size, type);
        
        if (!sipRes)
            sipIsErr = 1;
        
        delete[] name;
#line 1721 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetActiveAttrib, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetActiveUniform(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetActiveUniform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 229 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_ACTIVE_UNIFORM_MAX_LENGTH, &bufsize);
        
        GLchar *name = new GLchar[bufsize];
        GLint size;
        GLenum type;
        
        sipCpp->glGetActiveUniform(a0, a1, bufsize, 0, &size, &type, name);
        
        sipRes = Py_BuildValue("siI", name, size, type);
        
        if (!sipRes)
            sipIsErr = 1;
        
        delete[] name;
#line 1769 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetActiveUniform, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetAttachedShaders(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetAttachedShaders(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 249 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint nr_shaders;
        
        sipCpp->glGetProgramiv(a0, GL_ATTACHED_SHADERS, &nr_shaders);
        
        if (nr_shaders < 1)
        {
            sipRes = PyTuple_New(0);
        }
        else
        {
            GLuint *shaders = new GLuint[nr_shaders];
        
            sipCpp->glGetAttachedShaders(a0, nr_shaders, 0, shaders);
        
            sipRes = PyTuple_New(nr_shaders);
        
            if (sipRes)
            {
                for (GLint i = 0; i < nr_shaders; ++i)
                {
                    PyObject *itm = SIPLong_FromLong(shaders[i]);
                    
                    if (!itm)
                    {
                        Py_DECREF(sipRes);
                        sipRes = 0;
                        break;
                    }
                    
                    PyTuple_SetItem(sipRes, i, itm);
                }
            }
        
            delete[] shaders;
        }
        
        if (!sipRes)
            sipIsErr = 1;
#line 1838 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetAttachedShaders, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetAttribLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetAttribLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
        const  ::GLchar* a1;
        PyObject *a1Keep;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuAA", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1Keep, &a1))
        {
            int sipRes;

            sipRes = sipCpp->glGetAttribLocation(a0,a1);
            Py_DECREF(a1Keep);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetAttribLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetBooleanv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetBooleanv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 292 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLboolean fixed_params[16], *params;
        GLint nr_params;
        GLenum query;
        
        nr_params = qpyopengl_get(a0, &query);
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLboolean[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetBooleanv(a0, params);
        a1 = qpyopengl_from_GLboolean(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 1919 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetBooleanv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetBufferParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetBufferParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLint a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetBufferParameteriv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetBufferParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetError(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetError(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp))
        {
             ::GLenum sipRes;

            sipRes = sipCpp->glGetError();

            return PyLong_FromUnsignedLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetError, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetFloatv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetFloatv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 319 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLfloat fixed_params[16], *params;
        GLint nr_params;
        GLenum query;
        
        nr_params = qpyopengl_get(a0, &query);
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLfloat[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetFloatv(a0, params);
        a1 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 2022 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetFloatv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetFramebufferAttachmentParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetFramebufferAttachmentParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLenum a2;
         ::GLint a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glGetFramebufferAttachmentParameteriv(a0,a1,a2,&a3);

            return SIPLong_FromLong(a3);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetFramebufferAttachmentParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetIntegerv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetIntegerv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            int sipIsErr = 0;

#line 345 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint fixed_params[16], *params;
        GLint nr_params;
        GLenum query;
        
        nr_params = qpyopengl_get(a0, &query);
        
        if (nr_params == 0)
        {
            sipCpp->glGetIntegerv(query, &nr_params);
            params = new GLint[nr_params];
        }
        else
        {
            params = fixed_params;
        }
        
        sipCpp->glGetIntegerv(a0, params);
        a1 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
            
        if (params != fixed_params)
            delete[] params;
#line 2101 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a1;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetIntegerv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetProgramiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetProgramiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLenum a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 370 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint params[3];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_COMPUTE_LOCAL_WORK_SIZE)
        case GL_COMPUTE_LOCAL_WORK_SIZE:
            nr_params = 3;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetProgramiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 2151 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetProgramiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetProgramInfoLog(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetProgramInfoLog(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 392 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint bufsize;
        
        sipCpp->glGetProgramiv(a0, GL_INFO_LOG_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *log = new GLchar[bufsize];
        
            sipCpp->glGetProgramInfoLog(a0, bufsize, 0, log);
            sipRes = SIPBytes_FromString(log);
        
            delete[] log;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 2198 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetProgramInfoLog, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetRenderbufferParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetRenderbufferParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLint a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetRenderbufferParameteriv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetRenderbufferParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLenum a1;
         ::GLint a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glGetShaderiv(a0,a1,&a2);

            return SIPLong_FromLong(a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetShaderiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderInfoLog(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderInfoLog(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 415 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint bufsize;
        
        sipCpp->glGetShaderiv(a0, GL_INFO_LOG_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *log = new GLchar[bufsize];
        
            sipCpp->glGetShaderInfoLog(a0, bufsize, 0, log);
            sipRes = SIPBytes_FromString(log);
        
            delete[] log;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 2294 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetShaderInfoLog, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderPrecisionFormat(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderPrecisionFormat(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            PyObject * sipRes = 0;
            int sipIsErr = 0;

#line 436 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint range[2], precision;
        
        sipCpp->glGetShaderPrecisionFormat(a0, a1, range, &precision);
        
        sipRes = Py_BuildValue("(ii)i", (int)range[0], (int)range[1], (int)precision);
        
        if (!sipRes)
            sipIsErr = 1;
#line 2331 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetShaderPrecisionFormat, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderSource(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetShaderSource(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            PyObject * sipRes = 0;

#line 448 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint bufsize;
        
        sipCpp->glGetShaderiv(a0, GL_SHADER_SOURCE_LENGTH, &bufsize);
        
        if (bufsize > 0)
        {
            GLchar *source = new GLchar[bufsize];
        
            sipCpp->glGetShaderSource(a0, bufsize, 0, source);
            sipRes = SIPBytes_FromString(source);
        
            delete[] source;
        }
        else
        {
            sipRes = SIPBytes_FromString("");
        }
#line 2378 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            return sipRes;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetShaderSource, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetString(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetString(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            const char*sipRes = 0;

#line 469 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        sipRes = reinterpret_cast<const char *>(sipCpp->glGetString(a0));
#line 2406 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipRes == NULL)
            {
                Py_INCREF(Py_None);
                return Py_None;
            }

            return PyUnicode_DecodeASCII(sipRes, strlen(sipRes), NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetString, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetTexParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetTexParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 474 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_TEXTURE_SWIZZLE_RGBA) || defined(GL_TEXTURE_SWIZZLE_RGBA)
        #if defined(GL_TEXTURE_SWIZZLE_RGBA)
        case GL_TEXTURE_SWIZZLE_RGBA:
        #endif
        #if defined(GL_TEXTURE_BORDER_COLOR)
        case GL_TEXTURE_BORDER_COLOR:
        #endif
            nr_params = 4;
            break;
        #endif
            
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexParameterfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 2464 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetTexParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetTexParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetTexParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 501 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        #if defined(GL_TEXTURE_SWIZZLE_RGBA) || defined(GL_TEXTURE_SWIZZLE_RGBA)
        #if defined(GL_TEXTURE_SWIZZLE_RGBA)
        case GL_TEXTURE_SWIZZLE_RGBA:
        #endif
        #if defined(GL_TEXTURE_BORDER_COLOR)
        case GL_TEXTURE_BORDER_COLOR:
        #endif
            nr_params = 4;
            break;
        #endif
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetTexParameteriv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 2519 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetTexParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetUniformLocation(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetUniformLocation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
        const  ::GLchar* a1;
        PyObject *a1Keep;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuAA", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1Keep, &a1))
        {
            int sipRes;

            sipRes = sipCpp->glGetUniformLocation(a0,a1);
            Py_DECREF(a1Keep);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetUniformLocation, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetVertexAttribfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetVertexAttribfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLenum a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 529 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLfloat params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribfv(a0, a1, params);
        
        a2 = qpyopengl_from_GLfloat(&sipIsErr, params, nr_params);
#line 2596 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetVertexAttribfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glGetVertexAttribiv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glGetVertexAttribiv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLenum a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            int sipIsErr = 0;

#line 549 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        GLint params[4];
        Py_ssize_t nr_params;
        
        switch (a1)
        {
        case GL_CURRENT_VERTEX_ATTRIB:
            nr_params = 4;
            break;
        
        default:
            nr_params = 1;
        }
        
        sipCpp->glGetVertexAttribiv(a0, a1, params);
        
        a2 = qpyopengl_from_GLint(&sipIsErr, params, nr_params);
#line 2644 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipIsErr)
                return 0;

            return a2;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glGetVertexAttribiv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glHint(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glHint(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glHint, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glIsBuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glIsBuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLboolean sipRes;

            sipRes = sipCpp->glIsBuffer(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glIsBuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glIsEnabled(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glIsEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLboolean sipRes;

            sipRes = sipCpp->glIsEnabled(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glIsEnabled, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glIsFramebuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glIsFramebuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLboolean sipRes;

            sipRes = sipCpp->glIsFramebuffer(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glIsFramebuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glIsProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glIsProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLboolean sipRes;

            sipRes = sipCpp->glIsProgram(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glIsProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glIsRenderbuffer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glIsRenderbuffer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLboolean sipRes;

            sipRes = sipCpp->glIsRenderbuffer(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glIsRenderbuffer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glIsShader(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glIsShader(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLboolean sipRes;

            sipRes = sipCpp->glIsShader(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glIsShader, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glIsTexture(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glIsTexture(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
             ::GLboolean sipRes;

            sipRes = sipCpp->glIsTexture(a0);

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glIsTexture, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glLineWidth(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glLineWidth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLfloat a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glLineWidth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glLineWidth, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glLinkProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glLinkProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glLinkProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glLinkProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glPixelStorei(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glPixelStorei(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bui", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glPixelStorei(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glPixelStorei, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glPolygonOffset(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glPolygonOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLfloat a0;
         ::GLfloat a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glPolygonOffset(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glPolygonOffset, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glReleaseShaderCompiler(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glReleaseShaderCompiler(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp))
        {
            sipCpp->glReleaseShaderCompiler();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glReleaseShaderCompiler, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glRenderbufferStorage(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glRenderbufferStorage(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLsizei a2;
         ::GLsizei a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glRenderbufferStorage(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glRenderbufferStorage, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glSampleCoverage(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glSampleCoverage(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLclampf a0;
         ::GLboolean a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BfM", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glSampleCoverage(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glSampleCoverage, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glScissor(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glScissor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLint a1;
         ::GLsizei a2;
         ::GLsizei a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glScissor(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glScissor, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glStencilFunc(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glStencilFunc(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLuint a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buiu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glStencilFunc(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glStencilFunc, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glStencilFuncSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glStencilFuncSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLint a2;
         ::GLuint a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuiu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glStencilFuncSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glStencilFuncSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glStencilMask(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glStencilMask(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glStencilMask(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glStencilMask, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glStencilMaskSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glStencilMaskSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLuint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glStencilMaskSeparate(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glStencilMaskSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glStencilOp(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glStencilOp(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLenum a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glStencilOp(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glStencilOp, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glStencilOpSeparate(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glStencilOpSeparate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLenum a2;
         ::GLenum a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuuu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glStencilOpSeparate(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glStencilOpSeparate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glTexImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glTexImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLint a2;
         ::GLsizei a3;
         ::GLsizei a4;
         ::GLint a5;
         ::GLenum a6;
         ::GLenum a7;
        PyObject * a8;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 591 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, a7, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 3291 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glTexImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glTexParameterf(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glTexParameterf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLfloat a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buuf", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexParameterf(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glTexParameterf, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glTexParameterfv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glTexParameterfv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 600 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexParameterfv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3360 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glTexParameterfv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glTexParameteri(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glTexParameteri(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
         ::GLint a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buui", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glTexParameteri(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glTexParameteri, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glTexParameteriv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glTexParameteriv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLenum a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 609 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexParameteriv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3429 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glTexParameteriv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glTexSubImage2D(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glTexSubImage2D(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLenum a0;
         ::GLint a1;
         ::GLint a2;
         ::GLint a3;
         ::GLsizei a4;
         ::GLsizei a5;
         ::GLenum a6;
         ::GLenum a7;
        PyObject * a8;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiiiiiuuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5, &a6, &a7, &a8))
        {
            sipErrorState sipError = sipErrorNone;

#line 617 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a8, a7, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glTexSubImage2D(a0, a1, a2, a3, a4, a5, a6, a7, array);
#line 3477 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glTexSubImage2D, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLfloat a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bif", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glUniform1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 626 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform1fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3545 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform1i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform1i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLint a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glUniform1i(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform1i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform1iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform1iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 635 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform1iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3613 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform1iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLfloat a1;
         ::GLfloat a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glUniform2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 644 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform2fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3682 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform2i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform2i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLint a1;
         ::GLint a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glUniform2i(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform2i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform2iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform2iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 653 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform2iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3751 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform2iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLfloat a1;
         ::GLfloat a2;
         ::GLfloat a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bifff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glUniform3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 662 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform3fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3821 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform3i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform3i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLint a1;
         ::GLint a2;
         ::GLint a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glUniform3i(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform3i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform3iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform3iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 671 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform3iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 3891 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform3iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLfloat a1;
         ::GLfloat a2;
         ::GLfloat a3;
         ::GLfloat a4;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biffff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glUniform4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 680 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform4fv(a0, a1, reinterpret_cast<const GLfloat *>(array));
#line 3962 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform4i(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform4i(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLint a1;
         ::GLint a2;
         ::GLint a3;
         ::GLint a4;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiiii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glUniform4i(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform4i, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniform4iv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniform4iv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
        PyObject * a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipErrorState sipError = sipErrorNone;

#line 689 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a2, GL_INT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniform4iv(a0, a1, reinterpret_cast<const GLint *>(array));
#line 4033 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniform4iv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniformMatrix2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniformMatrix2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
         ::GLboolean a2;
        PyObject * a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 697 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix2fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 4077 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniformMatrix2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniformMatrix3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniformMatrix3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
         ::GLboolean a2;
        PyObject * a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 706 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix3fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 4121 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniformMatrix3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUniformMatrix4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUniformMatrix4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLsizei a1;
         ::GLboolean a2;
        PyObject * a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiMP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipErrorState sipError = sipErrorNone;

#line 715 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a3, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glUniformMatrix4fv(a0, a1, a2,
                    reinterpret_cast<const GLfloat *>(array));
#line 4165 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUniformMatrix4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glUseProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glUseProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glUseProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glUseProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glValidateProgram(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glValidateProgram(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bu", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0))
        {
            sipCpp->glValidateProgram(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glValidateProgram, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib1f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib1f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLfloat a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buf", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipCpp->glVertexAttrib1f(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib1f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib1fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib1fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 727 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib1fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 4282 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib1fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib2f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib2f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLfloat a1;
         ::GLfloat a2;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->glVertexAttrib2f(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib2f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib2fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib2fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 736 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib2fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 4350 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib2fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib3f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib3f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLfloat a1;
         ::GLfloat a2;
         ::GLfloat a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bufff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glVertexAttrib3f(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib3f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib3fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib3fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 745 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib3fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 4419 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib3fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib4f(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib4f(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLfloat a1;
         ::GLfloat a2;
         ::GLfloat a3;
         ::GLfloat a4;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Buffff", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4))
        {
            sipCpp->glVertexAttrib4f(a0,a1,a2,a3,a4);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib4f, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib4fv(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttrib4fv(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
        PyObject * a1;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1))
        {
            sipErrorState sipError = sipErrorNone;

#line 754 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array(&sipError, a1, GL_FLOAT, sipSelf);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttrib4fv(a0, reinterpret_cast<const GLfloat *>(array));
#line 4489 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttrib4fv, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttribPointer(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glVertexAttribPointer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLuint a0;
         ::GLint a1;
         ::GLenum a2;
         ::GLboolean a3;
         ::GLsizei a4;
        PyObject * a5;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BuiuMiP0", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            sipErrorState sipError = sipErrorNone;

#line 762 "/home/pi/PyQt5_gpl-5.10.1/sip/_QOpenGLFunctions_ES2/qopenglfunctions_es2.sip"
        const GLvoid *array = qpyopengl_value_array_cached(&sipError, a5, a2, sipSelf,
                "VertexAttribPointer", a0);
        
        if (sipError == sipErrorNone)
            sipCpp->glVertexAttribPointer(a0, a1, a2, a3, a4, array);
#line 4535 "/home/pi/PyQt5_gpl-5.10.1/_QOpenGLFunctions_ES2/sip_QOpenGLFunctions_ES2QOpenGLFunctions_ES2.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            Py_INCREF(Py_None);
            return Py_None;
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glVertexAttribPointer, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_QOpenGLFunctions_ES2_glViewport(PyObject *, PyObject *);}
static PyObject *meth_QOpenGLFunctions_ES2_glViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::GLint a0;
         ::GLint a1;
         ::GLsizei a2;
         ::GLsizei a3;
         ::QOpenGLFunctions_ES2 *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Biiii", &sipSelf, sipType_QOpenGLFunctions_ES2, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->glViewport(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QOpenGLFunctions_ES2, sipName_glViewport, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QOpenGLFunctions_ES2(void *, const sipTypeDef *);}
static void *cast_QOpenGLFunctions_ES2(void *sipCppV, const sipTypeDef *targetType)
{
     ::QOpenGLFunctions_ES2 *sipCpp = reinterpret_cast< ::QOpenGLFunctions_ES2 *>(sipCppV);

    if (targetType == sipType_QAbstractOpenGLFunctions)
        return static_cast< ::QAbstractOpenGLFunctions *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QOpenGLFunctions_ES2(void *, int);}
static void release_QOpenGLFunctions_ES2(void *sipCppV, int)
{
    delete reinterpret_cast< ::QOpenGLFunctions_ES2 *>(sipCppV);
}


extern "C" {static void dealloc_QOpenGLFunctions_ES2(sipSimpleWrapper *);}
static void dealloc_QOpenGLFunctions_ES2(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QOpenGLFunctions_ES2(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QOpenGLFunctions_ES2(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QOpenGLFunctions_ES2(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QOpenGLFunctions_ES2 *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new  ::QOpenGLFunctions_ES2();

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QOpenGLFunctions_ES2[] = {{0, 1, 1}};


static PyMethodDef methods_QOpenGLFunctions_ES2[] = {
    {SIP_MLNAME_CAST(sipName_glActiveTexture), meth_QOpenGLFunctions_ES2_glActiveTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glAttachShader), meth_QOpenGLFunctions_ES2_glAttachShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindAttribLocation), meth_QOpenGLFunctions_ES2_glBindAttribLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindBuffer), meth_QOpenGLFunctions_ES2_glBindBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindFramebuffer), meth_QOpenGLFunctions_ES2_glBindFramebuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindRenderbuffer), meth_QOpenGLFunctions_ES2_glBindRenderbuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBindTexture), meth_QOpenGLFunctions_ES2_glBindTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendColor), meth_QOpenGLFunctions_ES2_glBlendColor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendEquation), meth_QOpenGLFunctions_ES2_glBlendEquation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendEquationSeparate), meth_QOpenGLFunctions_ES2_glBlendEquationSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendFunc), meth_QOpenGLFunctions_ES2_glBlendFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBlendFuncSeparate), meth_QOpenGLFunctions_ES2_glBlendFuncSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBufferData), meth_QOpenGLFunctions_ES2_glBufferData, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glBufferSubData), meth_QOpenGLFunctions_ES2_glBufferSubData, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCheckFramebufferStatus), meth_QOpenGLFunctions_ES2_glCheckFramebufferStatus, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClear), meth_QOpenGLFunctions_ES2_glClear, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearColor), meth_QOpenGLFunctions_ES2_glClearColor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearDepthf), meth_QOpenGLFunctions_ES2_glClearDepthf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glClearStencil), meth_QOpenGLFunctions_ES2_glClearStencil, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glColorMask), meth_QOpenGLFunctions_ES2_glColorMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompileShader), meth_QOpenGLFunctions_ES2_glCompileShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexImage2D), meth_QOpenGLFunctions_ES2_glCompressedTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCompressedTexSubImage2D), meth_QOpenGLFunctions_ES2_glCompressedTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexImage2D), meth_QOpenGLFunctions_ES2_glCopyTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCopyTexSubImage2D), meth_QOpenGLFunctions_ES2_glCopyTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCreateProgram), meth_QOpenGLFunctions_ES2_glCreateProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCreateShader), meth_QOpenGLFunctions_ES2_glCreateShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glCullFace), meth_QOpenGLFunctions_ES2_glCullFace, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteBuffers), meth_QOpenGLFunctions_ES2_glDeleteBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteFramebuffers), meth_QOpenGLFunctions_ES2_glDeleteFramebuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteProgram), meth_QOpenGLFunctions_ES2_glDeleteProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteRenderbuffers), meth_QOpenGLFunctions_ES2_glDeleteRenderbuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteShader), meth_QOpenGLFunctions_ES2_glDeleteShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDeleteTextures), meth_QOpenGLFunctions_ES2_glDeleteTextures, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthFunc), meth_QOpenGLFunctions_ES2_glDepthFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthMask), meth_QOpenGLFunctions_ES2_glDepthMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDepthRangef), meth_QOpenGLFunctions_ES2_glDepthRangef, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDetachShader), meth_QOpenGLFunctions_ES2_glDetachShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisable), meth_QOpenGLFunctions_ES2_glDisable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDisableVertexAttribArray), meth_QOpenGLFunctions_ES2_glDisableVertexAttribArray, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawArrays), meth_QOpenGLFunctions_ES2_glDrawArrays, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glDrawElements), meth_QOpenGLFunctions_ES2_glDrawElements, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnable), meth_QOpenGLFunctions_ES2_glEnable, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glEnableVertexAttribArray), meth_QOpenGLFunctions_ES2_glEnableVertexAttribArray, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFinish), meth_QOpenGLFunctions_ES2_glFinish, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFlush), meth_QOpenGLFunctions_ES2_glFlush, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFramebufferRenderbuffer), meth_QOpenGLFunctions_ES2_glFramebufferRenderbuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFramebufferTexture2D), meth_QOpenGLFunctions_ES2_glFramebufferTexture2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glFrontFace), meth_QOpenGLFunctions_ES2_glFrontFace, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenBuffers), meth_QOpenGLFunctions_ES2_glGenBuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenFramebuffers), meth_QOpenGLFunctions_ES2_glGenFramebuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenRenderbuffers), meth_QOpenGLFunctions_ES2_glGenRenderbuffers, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenTextures), meth_QOpenGLFunctions_ES2_glGenTextures, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGenerateMipmap), meth_QOpenGLFunctions_ES2_glGenerateMipmap, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetActiveAttrib), meth_QOpenGLFunctions_ES2_glGetActiveAttrib, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetActiveUniform), meth_QOpenGLFunctions_ES2_glGetActiveUniform, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetAttachedShaders), meth_QOpenGLFunctions_ES2_glGetAttachedShaders, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetAttribLocation), meth_QOpenGLFunctions_ES2_glGetAttribLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetBooleanv), meth_QOpenGLFunctions_ES2_glGetBooleanv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetBufferParameteriv), meth_QOpenGLFunctions_ES2_glGetBufferParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetError), meth_QOpenGLFunctions_ES2_glGetError, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetFloatv), meth_QOpenGLFunctions_ES2_glGetFloatv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetFramebufferAttachmentParameteriv), meth_QOpenGLFunctions_ES2_glGetFramebufferAttachmentParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetIntegerv), meth_QOpenGLFunctions_ES2_glGetIntegerv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetProgramInfoLog), meth_QOpenGLFunctions_ES2_glGetProgramInfoLog, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetProgramiv), meth_QOpenGLFunctions_ES2_glGetProgramiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetRenderbufferParameteriv), meth_QOpenGLFunctions_ES2_glGetRenderbufferParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderInfoLog), meth_QOpenGLFunctions_ES2_glGetShaderInfoLog, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderPrecisionFormat), meth_QOpenGLFunctions_ES2_glGetShaderPrecisionFormat, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderSource), meth_QOpenGLFunctions_ES2_glGetShaderSource, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetShaderiv), meth_QOpenGLFunctions_ES2_glGetShaderiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetString), meth_QOpenGLFunctions_ES2_glGetString, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexParameterfv), meth_QOpenGLFunctions_ES2_glGetTexParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetTexParameteriv), meth_QOpenGLFunctions_ES2_glGetTexParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetUniformLocation), meth_QOpenGLFunctions_ES2_glGetUniformLocation, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribfv), meth_QOpenGLFunctions_ES2_glGetVertexAttribfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glGetVertexAttribiv), meth_QOpenGLFunctions_ES2_glGetVertexAttribiv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glHint), meth_QOpenGLFunctions_ES2_glHint, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsBuffer), meth_QOpenGLFunctions_ES2_glIsBuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsEnabled), meth_QOpenGLFunctions_ES2_glIsEnabled, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsFramebuffer), meth_QOpenGLFunctions_ES2_glIsFramebuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsProgram), meth_QOpenGLFunctions_ES2_glIsProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsRenderbuffer), meth_QOpenGLFunctions_ES2_glIsRenderbuffer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsShader), meth_QOpenGLFunctions_ES2_glIsShader, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glIsTexture), meth_QOpenGLFunctions_ES2_glIsTexture, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLineWidth), meth_QOpenGLFunctions_ES2_glLineWidth, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glLinkProgram), meth_QOpenGLFunctions_ES2_glLinkProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPixelStorei), meth_QOpenGLFunctions_ES2_glPixelStorei, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glPolygonOffset), meth_QOpenGLFunctions_ES2_glPolygonOffset, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glReleaseShaderCompiler), meth_QOpenGLFunctions_ES2_glReleaseShaderCompiler, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glRenderbufferStorage), meth_QOpenGLFunctions_ES2_glRenderbufferStorage, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glSampleCoverage), meth_QOpenGLFunctions_ES2_glSampleCoverage, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glScissor), meth_QOpenGLFunctions_ES2_glScissor, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilFunc), meth_QOpenGLFunctions_ES2_glStencilFunc, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilFuncSeparate), meth_QOpenGLFunctions_ES2_glStencilFuncSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilMask), meth_QOpenGLFunctions_ES2_glStencilMask, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilMaskSeparate), meth_QOpenGLFunctions_ES2_glStencilMaskSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilOp), meth_QOpenGLFunctions_ES2_glStencilOp, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glStencilOpSeparate), meth_QOpenGLFunctions_ES2_glStencilOpSeparate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexImage2D), meth_QOpenGLFunctions_ES2_glTexImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameterf), meth_QOpenGLFunctions_ES2_glTexParameterf, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameterfv), meth_QOpenGLFunctions_ES2_glTexParameterfv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameteri), meth_QOpenGLFunctions_ES2_glTexParameteri, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexParameteriv), meth_QOpenGLFunctions_ES2_glTexParameteriv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glTexSubImage2D), meth_QOpenGLFunctions_ES2_glTexSubImage2D, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1f), meth_QOpenGLFunctions_ES2_glUniform1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1fv), meth_QOpenGLFunctions_ES2_glUniform1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1i), meth_QOpenGLFunctions_ES2_glUniform1i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform1iv), meth_QOpenGLFunctions_ES2_glUniform1iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2f), meth_QOpenGLFunctions_ES2_glUniform2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2fv), meth_QOpenGLFunctions_ES2_glUniform2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2i), meth_QOpenGLFunctions_ES2_glUniform2i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform2iv), meth_QOpenGLFunctions_ES2_glUniform2iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3f), meth_QOpenGLFunctions_ES2_glUniform3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3fv), meth_QOpenGLFunctions_ES2_glUniform3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3i), meth_QOpenGLFunctions_ES2_glUniform3i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform3iv), meth_QOpenGLFunctions_ES2_glUniform3iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4f), meth_QOpenGLFunctions_ES2_glUniform4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4fv), meth_QOpenGLFunctions_ES2_glUniform4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4i), meth_QOpenGLFunctions_ES2_glUniform4i, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniform4iv), meth_QOpenGLFunctions_ES2_glUniform4iv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix2fv), meth_QOpenGLFunctions_ES2_glUniformMatrix2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix3fv), meth_QOpenGLFunctions_ES2_glUniformMatrix3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUniformMatrix4fv), meth_QOpenGLFunctions_ES2_glUniformMatrix4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glUseProgram), meth_QOpenGLFunctions_ES2_glUseProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glValidateProgram), meth_QOpenGLFunctions_ES2_glValidateProgram, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1f), meth_QOpenGLFunctions_ES2_glVertexAttrib1f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib1fv), meth_QOpenGLFunctions_ES2_glVertexAttrib1fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2f), meth_QOpenGLFunctions_ES2_glVertexAttrib2f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib2fv), meth_QOpenGLFunctions_ES2_glVertexAttrib2fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3f), meth_QOpenGLFunctions_ES2_glVertexAttrib3f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib3fv), meth_QOpenGLFunctions_ES2_glVertexAttrib3fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4f), meth_QOpenGLFunctions_ES2_glVertexAttrib4f, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttrib4fv), meth_QOpenGLFunctions_ES2_glVertexAttrib4fv, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glVertexAttribPointer), meth_QOpenGLFunctions_ES2_glVertexAttribPointer, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_glViewport), meth_QOpenGLFunctions_ES2_glViewport, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_initializeOpenGLFunctions), meth_QOpenGLFunctions_ES2_initializeOpenGLFunctions, METH_VARARGS, NULL}
};


static pyqt5ClassPluginDef plugin_QOpenGLFunctions_ES2 = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef__QOpenGLFunctions_ES2_QOpenGLFunctions_ES2 = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QOpenGLFunctions_ES2,
        {0},
        &plugin_QOpenGLFunctions_ES2
    },
    {
        sipNameNr_QOpenGLFunctions_ES2,
        {0, 0, 1},
        137, methods_QOpenGLFunctions_ES2,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QOpenGLFunctions_ES2,
    0,
    init_type_QOpenGLFunctions_ES2,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QOpenGLFunctions_ES2,
    0,
    0,
    0,
    release_QOpenGLFunctions_ES2,
    cast_QOpenGLFunctions_ES2,
    0,
    0,
    0,
    0,
    0,
    0
};
