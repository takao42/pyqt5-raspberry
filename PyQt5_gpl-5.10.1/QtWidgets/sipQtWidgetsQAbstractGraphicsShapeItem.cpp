/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.8
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 384 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 29 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"

#line 26 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 36 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtGui/qbrush.sip"
#include <qbrush.h>
#line 39 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtGui/qpen.sip"
#include <qpen.h>
#line 42 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 45 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 95 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 48 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 51 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 54 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 57 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 634 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 60 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 164 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 63 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 66 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 69 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 72 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 149 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 75 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 78 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 119 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 81 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 84 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 88 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 87 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 351 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 90 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 93 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 96 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 497 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 99 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 164 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 102 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 372 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 105 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 199 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 108 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 139 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 111 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 329 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 114 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 117 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 1012 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 120 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 28 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 123 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 126 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 129 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 132 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 135 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 602 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 138 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"
#line 26 "/home/pi/PyQt5_gpl-5.10.1/sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 141 "/home/pi/PyQt5_gpl-5.10.1/QtWidgets/sipQtWidgetsQAbstractGraphicsShapeItem.cpp"


class sipQAbstractGraphicsShapeItem : public  ::QAbstractGraphicsShapeItem
{
public:
    sipQAbstractGraphicsShapeItem( ::QGraphicsItem*);
    virtual ~sipQAbstractGraphicsShapeItem();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void advance(int);
     ::QRectF boundingRect() const;
     ::QPainterPath shape() const;
    bool contains(const  ::QPointF&) const;
    bool collidesWithItem(const  ::QGraphicsItem*, ::Qt::ItemSelectionMode) const;
    bool collidesWithPath(const  ::QPainterPath&, ::Qt::ItemSelectionMode) const;
    bool isObscuredBy(const  ::QGraphicsItem*) const;
     ::QPainterPath opaqueArea() const;
    void paint( ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);
    int type() const;
    void contextMenuEvent( ::QGraphicsSceneContextMenuEvent*);
    void dragEnterEvent( ::QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent( ::QGraphicsSceneDragDropEvent*);
    void dragMoveEvent( ::QGraphicsSceneDragDropEvent*);
    void dropEvent( ::QGraphicsSceneDragDropEvent*);
    void focusInEvent( ::QFocusEvent*);
    void focusOutEvent( ::QFocusEvent*);
    void hoverEnterEvent( ::QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent( ::QGraphicsSceneHoverEvent*);
    void hoverMoveEvent( ::QGraphicsSceneHoverEvent*);
    void inputMethodEvent( ::QInputMethodEvent*);
     ::QVariant inputMethodQuery( ::Qt::InputMethodQuery) const;
     ::QVariant itemChange( ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);
    void keyPressEvent( ::QKeyEvent*);
    void keyReleaseEvent( ::QKeyEvent*);
    void mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*);
    void mouseMoveEvent( ::QGraphicsSceneMouseEvent*);
    void mousePressEvent( ::QGraphicsSceneMouseEvent*);
    void mouseReleaseEvent( ::QGraphicsSceneMouseEvent*);
    bool sceneEvent( ::QEvent*);
    bool sceneEventFilter( ::QGraphicsItem*, ::QEvent*);
    void wheelEvent( ::QGraphicsSceneWheelEvent*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQAbstractGraphicsShapeItem(const sipQAbstractGraphicsShapeItem &);
    sipQAbstractGraphicsShapeItem &operator = (const sipQAbstractGraphicsShapeItem &);

    char sipPyMethods[32];
};

sipQAbstractGraphicsShapeItem::sipQAbstractGraphicsShapeItem( ::QGraphicsItem*a0):  ::QAbstractGraphicsShapeItem(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQAbstractGraphicsShapeItem::~sipQAbstractGraphicsShapeItem()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

void sipQAbstractGraphicsShapeItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::advance(a0);
        return;
    }

    extern void sipVH_QtWidgets_59(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    sipVH_QtWidgets_59(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QRectF sipQAbstractGraphicsShapeItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,sipName_QAbstractGraphicsShapeItem,sipName_boundingRect);

    if (!sipMeth)
        return  ::QRectF();

    extern  ::QRectF sipVH_QtWidgets_144(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_144(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QPainterPath sipQAbstractGraphicsShapeItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::shape();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQAbstractGraphicsShapeItem::contains(const  ::QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::contains(a0);

    extern bool sipVH_QtWidgets_146(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPointF&);

    return sipVH_QtWidgets_146(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQAbstractGraphicsShapeItem::collidesWithItem(const  ::QGraphicsItem*a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_147(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_147(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQAbstractGraphicsShapeItem::collidesWithPath(const  ::QPainterPath& a0, ::Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_148(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QPainterPath&, ::Qt::ItemSelectionMode);

    return sipVH_QtWidgets_148(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQAbstractGraphicsShapeItem::isObscuredBy(const  ::QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_149(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QGraphicsItem*);

    return sipVH_QtWidgets_149(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QPainterPath sipQAbstractGraphicsShapeItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::opaqueArea();

    extern  ::QPainterPath sipVH_QtWidgets_145(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_145(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractGraphicsShapeItem::paint( ::QPainter*a0,const  ::QStyleOptionGraphicsItem*a1, ::QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,sipName_QAbstractGraphicsShapeItem,sipName_paint);

    if (!sipMeth)
        return;

    extern void sipVH_QtWidgets_150(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QPainter*,const  ::QStyleOptionGraphicsItem*, ::QWidget*);

    sipVH_QtWidgets_150(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1, a2);
}

int sipQAbstractGraphicsShapeItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::type();

    extern int sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_8(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

void sipQAbstractGraphicsShapeItem::contextMenuEvent( ::QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_151(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_151(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::dragEnterEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::dragLeaveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::dragMoveEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::dropEvent( ::QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_152(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_152(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::focusInEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::focusOutEvent( ::QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QFocusEvent*);

    sipVH_QtWidgets_15(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::hoverEnterEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::hoverLeaveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::hoverMoveEvent( ::QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_153(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_153(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::inputMethodEvent( ::QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_29(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QInputMethodEvent*);

    sipVH_QtWidgets_29(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQAbstractGraphicsShapeItem::inputMethodQuery( ::Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[21]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::inputMethodQuery(a0);

    extern  ::QVariant sipVH_QtWidgets_30(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::Qt::InputMethodQuery);

    return sipVH_QtWidgets_30(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QVariant sipQAbstractGraphicsShapeItem::itemChange( ::QGraphicsItem::GraphicsItemChange a0,const  ::QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::itemChange(a0,a1);

    extern  ::QVariant sipVH_QtWidgets_154(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem::GraphicsItemChange,const  ::QVariant&);

    return sipVH_QtWidgets_154(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractGraphicsShapeItem::keyPressEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::keyReleaseEvent( ::QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QKeyEvent*);

    sipVH_QtWidgets_14(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::mouseDoubleClickEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::mouseMoveEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::mousePressEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQAbstractGraphicsShapeItem::mouseReleaseEvent( ::QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_155(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_155(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQAbstractGraphicsShapeItem::sceneEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::sceneEvent(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtWidgets_5(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQAbstractGraphicsShapeItem::sceneEventFilter( ::QGraphicsItem*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return  ::QAbstractGraphicsShapeItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_156(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsItem*, ::QEvent*);

    return sipVH_QtWidgets_156(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractGraphicsShapeItem::wheelEvent( ::QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
         ::QAbstractGraphicsShapeItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_157(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_157(sipGILState, sipImportedVirtErrorHandlers_QtWidgets_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QAbstractGraphicsShapeItem_pen, "pen(self) -> QPen");

extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_pen(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_pen(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractGraphicsShapeItem, &sipCpp))
        {
             ::QPen*sipRes;

            sipRes = new  ::QPen(sipCpp->pen());

            return sipConvertFromNewType(sipRes,sipType_QPen,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraphicsShapeItem, sipName_pen, doc_QAbstractGraphicsShapeItem_pen);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractGraphicsShapeItem_setPen, "setPen(self, Union[QPen, QColor, Qt.GlobalColor, QGradient])");

extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_setPen(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_setPen(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QPen* a0;
        int a0State = 0;
         ::QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QAbstractGraphicsShapeItem, &sipCpp, sipType_QPen, &a0, &a0State))
        {
            sipCpp->setPen(*a0);
            sipReleaseType(const_cast< ::QPen *>(a0),sipType_QPen,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraphicsShapeItem, sipName_setPen, doc_QAbstractGraphicsShapeItem_setPen);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractGraphicsShapeItem_brush, "brush(self) -> QBrush");

extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_brush(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_brush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractGraphicsShapeItem, &sipCpp))
        {
             ::QBrush*sipRes;

            sipRes = new  ::QBrush(sipCpp->brush());

            return sipConvertFromNewType(sipRes,sipType_QBrush,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraphicsShapeItem, sipName_brush, doc_QAbstractGraphicsShapeItem_brush);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractGraphicsShapeItem_setBrush, "setBrush(self, Union[QBrush, QColor, Qt.GlobalColor, QGradient])");

extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_setBrush(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_setBrush(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QBrush* a0;
        int a0State = 0;
         ::QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QAbstractGraphicsShapeItem, &sipCpp, sipType_QBrush, &a0, &a0State))
        {
            sipCpp->setBrush(*a0);
            sipReleaseType(const_cast< ::QBrush *>(a0),sipType_QBrush,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraphicsShapeItem, sipName_setBrush, doc_QAbstractGraphicsShapeItem_setBrush);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractGraphicsShapeItem_isObscuredBy, "isObscuredBy(self, QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QGraphicsItem* a0;
        const  ::QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QAbstractGraphicsShapeItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QAbstractGraphicsShapeItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraphicsShapeItem, sipName_isObscuredBy, doc_QAbstractGraphicsShapeItem_isObscuredBy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractGraphicsShapeItem_opaqueArea, "opaqueArea(self) -> QPainterPath");

extern "C" {static PyObject *meth_QAbstractGraphicsShapeItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QAbstractGraphicsShapeItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QAbstractGraphicsShapeItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractGraphicsShapeItem, &sipCpp))
        {
             ::QPainterPath*sipRes;

            sipRes = new  ::QPainterPath((sipSelfWasArg ? sipCpp-> ::QAbstractGraphicsShapeItem::opaqueArea() : sipCpp->opaqueArea()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraphicsShapeItem, sipName_opaqueArea, doc_QAbstractGraphicsShapeItem_opaqueArea);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QAbstractGraphicsShapeItem(void *, const sipTypeDef *);}
static void *cast_QAbstractGraphicsShapeItem(void *sipCppV, const sipTypeDef *targetType)
{
     ::QAbstractGraphicsShapeItem *sipCpp = reinterpret_cast< ::QAbstractGraphicsShapeItem *>(sipCppV);

    if (targetType == sipType_QGraphicsItem)
        return static_cast< ::QGraphicsItem *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QAbstractGraphicsShapeItem(void *, int);}
static void release_QAbstractGraphicsShapeItem(void *sipCppV, int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQAbstractGraphicsShapeItem *>(sipCppV);
    else
        delete reinterpret_cast< ::QAbstractGraphicsShapeItem *>(sipCppV);
}


extern "C" {static void dealloc_QAbstractGraphicsShapeItem(sipSimpleWrapper *);}
static void dealloc_QAbstractGraphicsShapeItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQAbstractGraphicsShapeItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QAbstractGraphicsShapeItem(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QAbstractGraphicsShapeItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QAbstractGraphicsShapeItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQAbstractGraphicsShapeItem *sipCpp = 0;

    {
         ::QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQAbstractGraphicsShapeItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QAbstractGraphicsShapeItem[] = {{121, 255, 1}};


static PyMethodDef methods_QAbstractGraphicsShapeItem[] = {
    {SIP_MLNAME_CAST(sipName_brush), meth_QAbstractGraphicsShapeItem_brush, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractGraphicsShapeItem_brush)},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QAbstractGraphicsShapeItem_isObscuredBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractGraphicsShapeItem_isObscuredBy)},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QAbstractGraphicsShapeItem_opaqueArea, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractGraphicsShapeItem_opaqueArea)},
    {SIP_MLNAME_CAST(sipName_pen), meth_QAbstractGraphicsShapeItem_pen, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractGraphicsShapeItem_pen)},
    {SIP_MLNAME_CAST(sipName_setBrush), meth_QAbstractGraphicsShapeItem_setBrush, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractGraphicsShapeItem_setBrush)},
    {SIP_MLNAME_CAST(sipName_setPen), meth_QAbstractGraphicsShapeItem_setPen, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractGraphicsShapeItem_setPen)}
};

PyDoc_STRVAR(doc_QAbstractGraphicsShapeItem, "\1QAbstractGraphicsShapeItem(parent: QGraphicsItem = None)");


static pyqt5ClassPluginDef plugin_QAbstractGraphicsShapeItem = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtWidgets_QAbstractGraphicsShapeItem = {
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QAbstractGraphicsShapeItem,
        {0},
        &plugin_QAbstractGraphicsShapeItem
    },
    {
        sipNameNr_QAbstractGraphicsShapeItem,
        {0, 0, 1},
        6, methods_QAbstractGraphicsShapeItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QAbstractGraphicsShapeItem,
    -1,
    -1,
    supers_QAbstractGraphicsShapeItem,
    0,
    init_type_QAbstractGraphicsShapeItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QAbstractGraphicsShapeItem,
    0,
    0,
    0,
    release_QAbstractGraphicsShapeItem,
    cast_QAbstractGraphicsShapeItem,
    0,
    0,
    0,
    0,
    0,
    0
};
